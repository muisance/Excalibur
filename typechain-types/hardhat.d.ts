/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721URIStorageUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorageUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeaconProxy__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "UpgradeableBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableBeacon__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Assoc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Assoc__factory>;
    getContractFactory(
      name: "CommonYJ",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CommonYJ__factory>;
    getContractFactory(
      name: "CommonYJUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CommonYJUpgradable__factory>;
    getContractFactory(
      name: "ContractBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractBase__factory>;
    getContractFactory(
      name: "ERC1155GUIDTrackerUp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155GUIDTrackerUp__factory>;
    getContractFactory(
      name: "ERC1155RolesTrackerUp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155RolesTrackerUp__factory>;
    getContractFactory(
      name: "ERC1155TrackerUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155TrackerUpgradable__factory>;
    getContractFactory(
      name: "Opinions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Opinions__factory>;
    getContractFactory(
      name: "Posts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Posts__factory>;
    getContractFactory(
      name: "Recursion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Recursion__factory>;
    getContractFactory(
      name: "Rules",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rules__factory>;
    getContractFactory(
      name: "ActionRepoTrackerUp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionRepoTrackerUp__factory>;
    getContractFactory(
      name: "CaseUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CaseUpgradable__factory>;
    getContractFactory(
      name: "Config",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Config__factory>;
    getContractFactory(
      name: "HubUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HubUpgradable__factory>;
    getContractFactory(
      name: "IActionRepo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IActionRepo__factory>;
    getContractFactory(
      name: "IAssoc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssoc__factory>;
    getContractFactory(
      name: "IAssocRepo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssocRepo__factory>;
    getContractFactory(
      name: "IAvatar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAvatar__factory>;
    getContractFactory(
      name: "ICase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICase__factory>;
    getContractFactory(
      name: "ICommonYJ",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICommonYJ__factory>;
    getContractFactory(
      name: "IConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConfig__factory>;
    getContractFactory(
      name: "IContractBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractBase__factory>;
    getContractFactory(
      name: "IERC1155GUIDTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155GUIDTracker__factory>;
    getContractFactory(
      name: "IERC1155RolesTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155RolesTracker__factory>;
    getContractFactory(
      name: "IERC1155Tracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Tracker__factory>;
    getContractFactory(
      name: "IHub",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHub__factory>;
    getContractFactory(
      name: "IJurisdiction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJurisdiction__factory>;
    getContractFactory(
      name: "IOpinions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOpinions__factory>;
    getContractFactory(
      name: "IPosts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPosts__factory>;
    getContractFactory(
      name: "IRecursion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRecursion__factory>;
    getContractFactory(
      name: "IRules",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRules__factory>;
    getContractFactory(
      name: "JurisdictionUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JurisdictionUpgradable__factory>;
    getContractFactory(
      name: "CaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CaseMock__factory>;
    getContractFactory(
      name: "HubMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HubMock__factory>;
    getContractFactory(
      name: "AssocRepo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssocRepo__factory>;
    getContractFactory(
      name: "IBoolStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBoolStore__factory>;
    getContractFactory(
      name: "IOpenRepo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOpenRepo__factory>;
    getContractFactory(
      name: "IStringStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStringStore__factory>;
    getContractFactory(
      name: "OpenRepoUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenRepoUpgradable__factory>;
    getContractFactory(
      name: "SoulUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SoulUpgradable__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721URIStorageUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorageUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "BeaconProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BeaconProxy>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "UpgradeableBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableBeacon>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Assoc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Assoc>;
    getContractAt(
      name: "CommonYJ",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CommonYJ>;
    getContractAt(
      name: "CommonYJUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CommonYJUpgradable>;
    getContractAt(
      name: "ContractBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractBase>;
    getContractAt(
      name: "ERC1155GUIDTrackerUp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155GUIDTrackerUp>;
    getContractAt(
      name: "ERC1155RolesTrackerUp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155RolesTrackerUp>;
    getContractAt(
      name: "ERC1155TrackerUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155TrackerUpgradable>;
    getContractAt(
      name: "Opinions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Opinions>;
    getContractAt(
      name: "Posts",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Posts>;
    getContractAt(
      name: "Recursion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Recursion>;
    getContractAt(
      name: "Rules",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Rules>;
    getContractAt(
      name: "ActionRepoTrackerUp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionRepoTrackerUp>;
    getContractAt(
      name: "CaseUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CaseUpgradable>;
    getContractAt(
      name: "Config",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Config>;
    getContractAt(
      name: "HubUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HubUpgradable>;
    getContractAt(
      name: "IActionRepo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IActionRepo>;
    getContractAt(
      name: "IAssoc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssoc>;
    getContractAt(
      name: "IAssocRepo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssocRepo>;
    getContractAt(
      name: "IAvatar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAvatar>;
    getContractAt(
      name: "ICase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICase>;
    getContractAt(
      name: "ICommonYJ",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICommonYJ>;
    getContractAt(
      name: "IConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IConfig>;
    getContractAt(
      name: "IContractBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractBase>;
    getContractAt(
      name: "IERC1155GUIDTracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155GUIDTracker>;
    getContractAt(
      name: "IERC1155RolesTracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155RolesTracker>;
    getContractAt(
      name: "IERC1155Tracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Tracker>;
    getContractAt(
      name: "IHub",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHub>;
    getContractAt(
      name: "IJurisdiction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJurisdiction>;
    getContractAt(
      name: "IOpinions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOpinions>;
    getContractAt(
      name: "IPosts",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPosts>;
    getContractAt(
      name: "IRecursion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRecursion>;
    getContractAt(
      name: "IRules",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRules>;
    getContractAt(
      name: "JurisdictionUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JurisdictionUpgradable>;
    getContractAt(
      name: "CaseMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CaseMock>;
    getContractAt(
      name: "HubMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HubMock>;
    getContractAt(
      name: "AssocRepo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssocRepo>;
    getContractAt(
      name: "IBoolStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBoolStore>;
    getContractAt(
      name: "IOpenRepo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOpenRepo>;
    getContractAt(
      name: "IStringStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStringStore>;
    getContractAt(
      name: "OpenRepoUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenRepoUpgradable>;
    getContractAt(
      name: "SoulUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SoulUpgradable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
